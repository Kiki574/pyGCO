name: CI package

# see: https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:  # Trigger the workflow on push or pull request, but only for the main branch
  push:
    branches: [master]
  pull_request: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress: ${{ ! (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/release/')) }}

jobs:

  package:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    - name: Install require
      run: pip install check-manifest twine wheel

    - name: Check manifest
      run: |
        python -m check_manifest
        python setup.py check --metadata --strict

    - name: Check package
      run: |
        python setup.py sdist bdist_wheel
        twine check dist/*


  pkg-install:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macOS-11, windows-2019]
        python-version: ["3.6", "3.9"]
        include:
          - { os: "ubuntu-22.04", python-version: "3.10" }
          - { os: "macOS-11", python-version: "3.10" }
          - { os: "windows-2022", python-version: "3.10" }
          - { os: "ubuntu-20.04", python-version: "2.7" }
    # Timeout: https://stackoverflow.com/a/59076067/4521646
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Adjust dead snakes
      if: ${{ matrix.python-version == '3.6' }}
      run: pip install numpy

    - name: Try installing
      run: |
        python setup.py install
        pip show gco-wrapper
        python -c "import gco ;  print(gco.__version__)"


  pip-dist:
    needs: pkg-install
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macOS-11, windows-2019]
        python-version: ["3.6", "3.9"]
        include:
          - { os: "ubuntu-22.04", python-version: "3.10" }
          - { os: "macOS-11", python-version: "3.10" }
          - { os: "windows-2019", python-version: "3.10" }
          - { os: "ubuntu-20.04", python-version: "2.7" }
    # Timeout: https://stackoverflow.com/a/59076067/4521646
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Create package
      run: |
        pip install build
        python -m build
        ls -l dist/

    - name: Try installing
      working-directory: dist
      run: |
        pip install $(python -c "import glob ; print(' '.join(glob.glob('*.whl')))")
        # fixme
        python -c 'import sysconfig; print(sysconfig.get_paths())'
        pip show gco-wrapper
        python -c "import gco ;  print(gco.__version__)"


  package-guardian:
    runs-on: ubuntu-latest
    needs: ["pkg-install", "pip-dist"]
    if: always()
    steps:
    - run: echo "${{ needs.pytester.result }}"
    - name: failing...
      if: needs.pytester.result == 'failure'
      run: exit 1
    - name: cancelled or skipped...
      if: contains(fromJSON('["cancelled", "skipped"]'), needs.pytester.result)
      timeout-minutes: 1
      run: sleep 90
