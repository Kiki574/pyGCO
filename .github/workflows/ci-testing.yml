name: CI testing

# see: https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:  # Trigger the workflow on push or pull request, but only for the main branch
  push:
    branches: [master]
  pull_request: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress: ${{ ! (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/release/')) }}

jobs:
  pytester:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macOS-11, windows-2019]
        python-version: ["3.6", "3.8"]
        include:
          - { os: "ubuntu-22.04", python-version: "3.10" }
          - { os: "ubuntu-22.04", python-version: "3.11" }
          - { os: "macOS-12", python-version: "3.11" }
          # - { os: "windows-2022", python-version: "3.11" }  # ToDo
          - { os: "ubuntu-20.04", python-version: "2.7" }
    # Timeout: https://stackoverflow.com/a/59076067/4521646
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip --version
        pip install -e . -U -r tests/requirements.txt
        pip list
      shell: bash

    - name: Tests
      run: python -m pytest tests/ -v --cov=gco

    - name: Statistics
      if: success()
      run: |
        coverage report
        coverage xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      if: success()
      continue-on-error: true
      with:
        # token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage.xml
        flags: pytest,python${{ matrix.python-version }}
        fail_ci_if_error: false

  makefile-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macOS-11]
        python-version: ["3.6", "3.11"]
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip --version
        pip install -r requirements.txt
        pip list
      shell: bash

    - name: Test makefile
      run: |
        make all
        ls -lh tests/

  testing-guardian:
    runs-on: ubuntu-latest
    needs: pytester
    if: always()
    steps:
    - run: echo "${{ needs.pytester.result }}"
    - name: failing...
      if: needs.pytester.result == 'failure'
      run: exit 1
    - name: cancelled or skipped...
      if: contains(fromJSON('["cancelled", "skipped"]'), needs.pytester.result)
      timeout-minutes: 1
      run: sleep 90
